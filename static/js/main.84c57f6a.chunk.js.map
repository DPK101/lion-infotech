{"version":3,"sources":["components/Login.js","components/About.js","convert.js","components/AdminPage.js","components/Navbar.js","components/UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","userType","setUserType","handleChange","e","console","log","target","value","saveUserType","history","useHistory","className","type","name","onChange","onClick","push","About","convert","file","callback","Promise","resolve","reject","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","wsnameItems","SheetNames","wsItem","Sheets","items","utils","sheet_to_json","header","defval","wsnameLocations","wsLocations","data","locations","readAsArrayBuffer","AdminPage","state","products","prevProps","length","this","uploadProducts","event","fileObj","files","err","resp","setState","map","row","index","element","idx","React","Component","Navbar","UserPage","columns","slice","itemCards","forEach","itemArray","itemArrayIndex","itemCard","columnName","columnIndex","card","src","alt","href","App","user","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8aAIe,SAASA,EAAMC,GAC5B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAe,SAAAC,GACnBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBT,EAAMU,aAAaL,EAAEG,OAAOC,OAC5BN,EAAYE,EAAEG,OAAOC,QAEjBE,EAAUC,cAEhB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAf,SACC,oBAAIA,UAAU,UAAd,6BAED,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,gCACE,uCACA,0BAEF,sBAAKA,UAAU,aAAf,UACE,uBAAOC,KAAK,QAAQC,KAAK,OAAOC,SAAUZ,EAAcK,MAAM,UAAU,sBAAMI,UAAU,YAAhB,mBACxE,uBACA,uBAAOC,KAAK,QAAQC,KAAK,OAAOC,SAAUZ,EAAcK,MAAM,SAAS,sBAAMI,UAAU,YAAhB,qBAEzE,wBAAQA,UAAU,gBAAgBJ,MAAM,SAASQ,QAAS,WAC3C,UAAbf,EAAuBS,EAAQO,KAAK,UAAYP,EAAQO,KAAK,UAD/D,4BC3BK,SAASC,IACtB,OACE,qBAAKN,UAAU,oB,2BC0CJO,EA5CC,SAACC,EAAMC,GACrB,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACnC,IAAIC,EAAS,IAAIC,WACbC,IAASF,EAAOG,mBACpBH,EAAOI,OAAS,SAASzB,GAEvB,IAAI0B,EAAO1B,EAAEG,OAAOwB,OAChBC,EAAKC,IAAKC,KAAKJ,EAAM,CAAEjB,KAAMc,EAAO,SAAW,UAG/CQ,EAAcH,EAAGI,WAAW,GAC5BC,EAASL,EAAGM,OAAOH,GAGnBI,EAAQN,IAAKO,MAAMC,cAAcJ,EAAQ,CAAEK,OAAQ,EAAGC,OAAQ,KAG9DC,EAAkBZ,EAAGI,WAAW,GAChCS,EAAcb,EAAGM,OAAOM,GAOxBE,EAAO,CAAEP,MAAOA,EAAOQ,UAJXd,IAAKO,MAAMC,cAAcI,EAAa,CAAEH,OAAQ,KAOhE,OADAnB,EAAQuB,GACDzB,EAAS,KAAMyB,IAEpB1B,GAAQO,EAAMF,EAAOG,mBAAmBR,GACvCK,EAAOuB,kBAAkB5B,OCqBnB6B,E,kDAjDb,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IACDmD,MAAQ,CACXC,SAAU,IAHK,E,sDAOnB,SAAmBC,GACbA,EAAUD,SAASE,SAAWC,KAAKJ,MAAMC,SAASE,QACpDC,KAAKvD,MAAMwD,eAAeD,KAAKJ,MAAMC,Y,oBAIzC,WAAU,IAAD,OACCA,EAAaG,KAAKvD,MAAlBoD,SAaR,OACE,sBAAKvC,UAAU,kBAAf,UACE,6CACA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,+BACA,qBAAKA,UAAU,gBAAf,SAA+B,uBAAOC,KAAK,OAAOE,SAlBtC,SAAAyC,GAClB,IAAIC,EAAUD,EAAMjD,OAAOmD,MAAM,GACjCvC,EAAQsC,GAAS,SAACE,EAAKC,GACjBD,EACFtD,QAAQC,IAAI,kBAAmBqD,GAE/B,EAAKE,SAAS,CACZV,SAAQ,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAMrB,mBAalB,qBAAK3B,UAAU,kBAAf,SACGuC,EAASW,KAAI,SAACC,EAAKC,GAClB,OAAQ,qBAAiBpD,UAAU,MAA3B,SACNmD,EAAID,KAAI,SAACG,EAASC,GAChB,OAAO,qBAAetD,UAAU,UAAzB,SAAoCqD,GAAoB,MAA9CC,OAFHF,kB,GAtCRG,IAAMC,W,cCDf,SAASC,IACtB,OACE,sBAAKzD,UAAU,gBAAf,UACE,2CACA,sBAAKA,UAAU,gBAAf,UACE,0CACA,6C,MCLO,SAAS0D,EAASvE,GAC/B,IAAQoD,EAAapD,EAAboD,SACFoB,EAAUpB,EAAS,GAAT,YAAkBA,EAAS,IAAM,GAC3CZ,EAAK,YAAOY,EAASqB,MAAM,EAAGrB,EAASE,SACzCoB,EAAY,GAWhB,OATAlC,EAAMmC,SAAQ,SAACC,EAAWC,GACxB,IAAIC,EAAW,GACfN,EAAQG,SAAQ,SAACI,EAAYC,GAC3BF,EAASC,GAAcH,EAAUI,MAEnCN,EAAUxD,KAAK4D,MAGjBxE,QAAQC,IAAImE,GAEV,sBAAK7D,UAAU,iBAAf,UACE,cAAC,EAAD,IACC6D,EAAUX,KAAI,SAACkB,EAAMhB,GACpB,OACE,sBAAKpD,UAAU,OAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAMA,UAAU,QAAQqE,IAAI,aAAaC,IAAI,aAE/C,gCACE,+BAAOF,EAAK,gBAAqB,uBACjC,iDAAoBA,EAAI,eAAuB,uBAC/C,gDAAmBA,EAAK,oBAE1B,uBACA,mBAAGG,KAAK,iBAAR,gD,ICgBGC,E,kDArCb,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IAMRU,aAAe,SAAA4E,GACb,EAAKxB,SAAS,CAAC5D,SAAUoF,KARR,EAUnB9B,eAAiB,SAAAJ,GACf,EAAKU,SAAS,CACZV,cAVF,EAAKD,MAAQ,CACXjD,SAAU,OACVkD,SAAU,IAJK,E,0CAenB,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,KAAK,SAAZ,SACE,cAACpE,EAAD,MAEF,cAAC,IAAD,CAAOoE,KAAK,SAAZ,SACE,cAAC,EAAD,CAAWnC,SAAUG,KAAKJ,MAAMC,SAAUI,eAAgBD,KAAKC,mBAEjE,cAAC,IAAD,CAAO+B,KAAK,QAAZ,SACE,cAAC,EAAD,CAAUnC,SAAUG,KAAKJ,MAAMC,aAEjC,cAAC,IAAD,CAAOmC,KAAK,IAAZ,SACE,cAAC,EAAD,CAAO7E,aAAc6C,KAAK7C,0B,GA9BpB0D,IAAMC,WCATmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84c57f6a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport './Login.scss'\n\nexport default function Login(props) {\n  const [userType, setUserType] = useState('')\n  const handleChange = e => {\n    console.log(e.target.value)\n    props.saveUserType(e.target.value)\n    setUserType(e.target.value)\n  }\n  const history = useHistory()\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"left\">\n       <h1 className=\"company\">Lion Infotech</h1>\n      </div>\n      <div className=\"right\">\n        <div className=\"login-container\">\n          <div>\n            <h1>Login</h1>\n            <hr />\n          </div>\n          <div className=\"user-types\">\n            <input type=\"radio\" name=\"type\" onChange={handleChange} value=\"admin\" /><span className=\"user-type\">Admin</span>\n            <br/>\n            <input type=\"radio\" name=\"type\" onChange={handleChange} value=\"user\" /><span className=\"user-type\">User</span>\n          </div>\n          <button className=\"submit-button\" value=\"Submit\" onClick={() => {\n            userType === 'admin' ? history.push('/admin') : history.push('/user')\n          }}>Submit</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport default function About() {\n  return (\n    <div className=\"about-container\">\n      \n    </div>\n  )\n}","import XLSX from 'xlsx';\n\nconst convert = (file, callback) => {\n  return new Promise(function(resolve, reject) {\n    var reader = new FileReader();\n    var rABS = !!reader.readAsBinaryString;\n    reader.onload = function(e) {\n      /* Parse data */\n      var bstr = e.target.result;\n      var wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' });\n\n      /* Get first worksheet */\n      var wsnameItems = wb.SheetNames[0];\n      var wsItem = wb.Sheets[wsnameItems];\n\n      /* Convert array of arrays */\n      var items = XLSX.utils.sheet_to_json(wsItem, { header: 1, defval: \"\" });\n\n      /* Get first worksheet */\n      var wsnameLocations = wb.SheetNames[1];\n      var wsLocations = wb.Sheets[wsnameLocations];\n\n      /* Convert array of arrays */\n      var locations = XLSX.utils.sheet_to_json(wsLocations, { header: 1 });\n\n      // var cols = make_cols(ws['!ref']);\n\n      var data = { items: items, locations: locations };\n\n      resolve(data);\n      return callback(null, data);\n    };\n    if (file && rABS) reader.readAsBinaryString(file);\n    else reader.readAsArrayBuffer(file);\n  });\n};\n\n// function make_cols(refstr) {\n//   var o = [],\n//     C = XLSX.utils.decode_range(refstr).e.c + 1;\n//   for (var i = 0; i < C; ++i) {\n//     o[i] = { name: XLSX.utils.encode_col(i), key: i };\n//   }\n//   return o;\n// }\n\nexport default convert;\n","import React from 'react'\nimport './AdminPage.scss'\nimport convert from '../convert'\n\nclass AdminPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      products: []\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.products.length !== this.state.products.length) {\n      this.props.uploadProducts(this.state.products)\n    }\n  }\n\n  render() {\n    const { products } = this.props\n    const fileHandler = event => {\n      let fileObj = event.target.files[0];\n      convert(fileObj, (err, resp) => {\n        if (err) {\n          console.log(\"Error occured: \", err)\n        } else {\n          this.setState({\n            products: resp?.items\n          })\n        }\n      })\n    }\n    return (\n      <div className=\"admin-container\" >\n        <h1>Admin Panel</h1>\n        <div className=\"upload-window\">\n          <div className=\"upload-excel\">\n            <div className=\"upload-tile\">Upload Excel file</div>\n            <div className=\"upload-button\"><input type=\"File\" onChange={fileHandler} /></div>\n          </div>\n          <div className=\"table-container\">\n            {products.map((row, index) => {\n              return (<div key={index} className=\"row\">{\n                row.map((element, idx) => {\n                  return <div key={idx} className=\"element\">{element ? element : 'NA'}</div>\n                })}</div>)\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AdminPage","import React from 'react'\nimport './Navbar.scss'\n\nexport default function Navbar() {\n  return (\n    <div className=\"nav-container\">\n      <div>Products</div>\n      <div className=\"right-section\">\n        <div>Profile</div>\n        <div>Cart</div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport Navbar from './Navbar'\nimport './UserPage.scss'\n\nexport default function UserPage(props) {\n  const { products } = props\n  const columns = products[0] ? [...products[0]] : []\n  const items = [...products.slice(1, products.length)]\n  let itemCards = []\n\n  items.forEach((itemArray, itemArrayIndex) => {\n    let itemCard = {}\n    columns.forEach((columnName, columnIndex) => {\n      itemCard[columnName] = itemArray[columnIndex]\n    })\n    itemCards.push(itemCard);\n  })\n\n  console.log(itemCards)\n  return (\n    <div className=\"user-container\">\n      <Navbar />\n      {itemCards.map((card, index) => {\n        return (\n          <div className=\"card\">\n            <div className=\"image-container\">\n              <img  className=\"image\" src=\"laptop.jpg\" alt=\"laptop\" />\n            </div>\n            <div>\n              <span>{card[\"Item name*\"]}</span><br/>\n              <span>Description: {card[\"Description\"]}</span><br/>\n              <span>Sale Price: {card[\"Sale Price\"]}</span>\n            </div>\n            <hr/>\n            <a href=\"tel:8125973157\">Call us at +91-8125973157</a>\n          </div>\n        )\n      })}\n    </div>\n  )\n}","import './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './components/Login';\nimport About from './components/About';\nimport AdminPage from './components/AdminPage';\nimport React from 'react';\nimport UserPage from './components/UserPage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userType: 'user',\n      products: []\n    }\n  }\n  saveUserType = user => {\n    this.setState({userType: user})\n  }\n  uploadProducts = products => {\n    this.setState({\n      products\n    })\n  }\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/admin\">\n            <AdminPage products={this.state.products} uploadProducts={this.uploadProducts}/>\n          </Route>\n          <Route path=\"/user\">\n            <UserPage products={this.state.products} />\n          </Route>\n          <Route path=\"/\">\n            <Login saveUserType={this.saveUserType}/>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}